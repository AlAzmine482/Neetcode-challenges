
#1 Duplicate Integer:
class Solution:
    
    ex: nums: [1,2,3,3]
    create empty set    
    check for loop for duplicate and check set
    if x in set then return true else false
    
    def hasDuplicate(self, nums: List[int]) -> bool:
         seen = set()
         for x in nums:
            if x in seen:
                return True
            seen.add(x)
            return False

#2 Valid Anagram
class Solution:
        ex: s = racecar, t = carrace
        check length if not the same return false.
        for loop s then check the frequency of all letters.
def isAnagram(self, s: str, t: str) -> bool:
        
        if len(s) != len(t):
            return False

        countS, countT = {}, {}

        for i in range(len(s))
            countS[s[i]] = 1 + countS.get(s[i], 0)
            print(countS)


#3 Two Integer Sum

ex: Input: 
nums = [3,4,5,6], target = 7

Output: [0,1]

enumerate to get the index and values
create dictionary
prev = {}
for i, val in enumerate(num)
    diff = target - val
    if diff in prev:
       return [prev[r], i]
    prev = i


#4 anagram groups:


class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        res = {} #mapping character count of from list of anagrams 
        for s in strs:
            count = [0] * 26 #lowercase a-z
            for c in s:
                count[ord(c) - ord("a")]  += 1
                
            res[tuple(count)].append(s)

        return res.values()

